[project]
name = "aircraft-engine-anomaly-detection"
version = "0.1.0"
description = "Anomaly detection in aircraft engines using SOTA zero-shot models"
readme = "README.md"
requires-python = "==3.10.*"
dependencies = [
    "clip",
    "matplotlib>=3.10.1",
    "numpy>=2.2.4",
    "opencv-python>=4.11.0.86",
    "pandas>=2.2.3",
    "pillow>=11.1.0",
    "pip>=25.0.1",
    "pydantic>=2.11.3",
    "segment-anything",
    "torch>=2.6.0",
    "google-generativeai>=0.2.0",
    "transformers[torch]>=4.51.3",
    "tqdm>=4.67.1",
    "pycocotools>=2.0.8",
    "scikit-learn>=1.6.1",
    "timm>=1.0.15",
    "typing-extensions>=4.13.1",
]

[project.optional-dependencies]
dev = ["pytest", "ruff", "mypy", "ipykernel>=6.29.5"]

[build-system]
requires = ["setuptools>=64.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "UP", "I"]
ignore = ["F401", "UP015", "F541"]

[tool.ruff.format]
quote-style = "double" # Optional: enforce double quotes
indent-style = "space" # Optional: use spaces instead of tabs

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true  # Ignore missing type hints in external libs (e.g. some ML libs), for now
explicit_package_bases = true  # Recognize the src/ layout (treat src as package root)
disallow_untyped_defs = true   # Require type hints for function and method definitions:contentReference[oaicite:0]{index=0}
disallow_incomplete_defs = true  # Require hints for functions with default values
no_implicit_optional = true    # Don't treat missing None as Optional (be explicit)
warn_return_any = true         # Warn if a function returns Any (likely missing hints)
warn_unused_ignores = true     # Warn if a `# type: ignore` comment is no longer needed:contentReference[oaicite:1]{index=1}
show_error_codes = true        # Show error codes for mypy (e.g. [attr-defined])
mypy_path = "src"          # Set the source directory for mypy
# (Optional strictness â€“ enable gradually if desired)
disallow_untyped_calls = true      # Flag calls to functions without type hints (can be noisy in ML code)
disallow_subclassing_any = true    # Prevent subclassing untyped classes (e.g. from untyped libs)
disallow_untyped_decorators = true # Prevent using decorators without type hints
disallow_any_unimported = true     # Treat missing stubs as errors instead of Any


[tool.uv.sources]
clip = { git = "https://github.com/openai/CLIP.git" }
segment-anything = { git = "https://github.com/facebookresearch/segment-anything.git" }
